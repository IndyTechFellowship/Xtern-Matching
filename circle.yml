general:
  build_dir: core
  branches:
    only:
      - master
      
machine:
  environment:
    PYTHONPATH: $(PYTHONPATH):$(HOME)/google_appengine
    # GOROOT is not set by default
    #GOROOT: ""
    PATH: "${HOME}/go_appengine_sdk_linux_amd64-1.9.40/go_appengine/:${PATH}"
    #GOPATH: "~/.go_workspace:/usr/local/go_workspace:${HOME}/.go_project"
    GCLOUD_PROJECT: "xtern-matching"
    
dependencies:
  pre:
    # Download App Engine SDK
    # This is not necessary to deploy, its only necessary  to run local tests importing the App Engine SDK
    - curl -o $HOME/go_appengine_sdk_linux_amd64-1.9.40.zip https://storage.googleapis.com/appengine-sdks/featured/go_appengine_sdk_linux_amd64-1.9.40.zip
    - unzip -q -d $HOME $HOME/go_appengine_sdk_linux_amd64-1.9.40.zip
    - echo $PATH
    - export PATH=$PATH:$HOME/go_appengine_sdk_linux_amd64-1.9.40/go_appengine/
    - echo $PATH
    - echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
    - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account xtern-matching@appspot.gserviceaccount.com --key-file ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT
  override:
    # './...' is a relative pattern which means all subdirectories
    - go get -t -d -v ./...
    - npm install
test:
  override:
  #TODO: Add tests
deployment:
    staging:
        branch: master
        commands:
            - gcloud -q app deploy app.yaml